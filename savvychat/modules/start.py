import asyncio
import random
from typing import Union, List
from pyrogram import filters
from pyrogram.enums import ChatType
from pyrogram.types import InlineKeyboardMarkup, Message
from savvychat import savvychat
from savvychat.database.chats import add_served_chat
from savvychat.database.users import add_served_user
from savvychat.modules.helpers import (
    CLOSE_BTN,
    DEV_OP,
    HELP_BTN,
    HELP_BUTN,
    HELP_READ,
    HELP_START,
    START,
)


#----------------IMG-------------#



# Random Start Images
IMG = [
    "https://graph.org/file/210751796ff48991b86a3.jpg",
    "https://graph.org/file/7b4924be4179f70abcf33.jpg",
    "https://graph.org/file/f6d8e64246bddc26b4f66.jpg",
    "https://graph.org/file/63d3ec1ca2c965d6ef210.jpg",
    "https://graph.org/file/9f12dc2a668d40875deb5.jpg",
    "https://graph.org/file/0f89cd8d55fd9bb5130e1.jpg",
    "https://graph.org/file/e5eb7673737ada9679b47.jpg",
    "https://graph.org/file/2e4dfe1fa5185c7ff1bfd.jpg",
    "https://graph.org/file/36af423228372b8899f20.jpg",
    "https://graph.org/file/c698fa9b221772c2a4f3a.jpg",
    "https://graph.org/file/61b08f41855afd9bed0ab.jpg",
    "https://graph.org/file/744b1a83aac76cb3779eb.jpg",
    "https://graph.org/file/814cd9a25dd78480d0ce1.jpg",
    "https://graph.org/file/e8b472bcfa6680f6c6a5d.jpg",
]


#----------------IMG-------------#


#---------------STICKERS---------------#

# Random Stickers
STICKER = [
    "CAACAgUAAx0CYlaJawABBy4vZaieO6T-Ayg3mD-JP-f0yxJngIkAAv0JAALVS_FWQY7kbQSaI-geBA",
    "CAACAgUAAx0CYlaJawABBy4rZaid77Tf70SV_CfjmbMgdJyVD8sAApwLAALGXCFXmCx8ZC5nlfQeBA",
    "CAACAgUAAx0CYlaJawABBy4jZaidvIXNPYnpAjNnKgzaHmh3cvoAAiwIAAIda2lVNdNI2QABHuVVHgQ",
]

#---------------STICKERS---------------#


#---------------EMOJIOS---------------#

EMOJIOS = [
    "üí£",
    "üí•",
    "ü™Ñ",
    "üß®",
    "‚ö°",
    "ü§°",
    "üëª",
    "üéÉ",
    "üé©",
    "üïä",
]


#---------------EMOJIOS---------------#
def is_command(commands: Union[str, List[str]]):
    async def func(_, __, m: Message):
        if isinstance(commands, str):
            return m.text and m.text.startswith(f"/{commands}")
        elif isinstance(commands, list):
            return m.text and any(m.text.startswith(f"/{cmd}") for cmd in commands)
        return False

    return filters.create(func)

@savvychat.on_message(is_command(["start", "aistart"]))
async def start(_, m: Message):
    user_id = m.from_user.id
    user_name = m.from_user.first_name
    chutiya = "[" + user_name + "](tg://user?id=" + str(user_id) + ")"
    if m.chat.type == ChatType.PRIVATE:
        accha = await m.reply_text(
            text=random.choice(EMOJIOS),
        )
        await asyncio.sleep(1.3)
        await accha.edit("__·¥ÖŒπ–∏g ·¥ÖœÉ–∏g Í®ÑÔ∏é —ï—ÇŒ±—è—ÇŒπ–∏g..__")
        await asyncio.sleep(0.2)
        await accha.edit("__·¥ÖŒπ–∏g ·¥ÖœÉ–∏g Í®Ñ s—ÇŒ±—è—ÇŒπ–∏g.....__")
        await asyncio.sleep(0.2)
        await accha.edit("__·¥ÖŒπ–∏g ·¥ÖœÉ–∏g Í®ÑÔ∏é s—ÇŒ±—è—ÇŒπ–∏g..__")
        await asyncio.sleep(0.2)
        await accha.delete()
        umm = await m.reply_sticker(sticker=random.choice(STICKER))
        await asyncio.sleep(2)
        await umm.delete()
        await m.reply_text(
            text=f"""
‡πè  ú·¥á è, {chutiya}
…™ ·¥Ä·¥ç {savvychat.name}üíû
 è·¥è·¥ú Ä ·¥Ä…™ ·¥Ñ·¥è·¥ç·¥ò·¥Ä…¥…™·¥è…¥.
 ü·¥á·¥õ'Íú± ·¥Ñ ú·¥Ä·¥õ ·¥Ä…¥·¥Ö ·¥áx·¥ò ü·¥è Ä·¥á.
·¥õ ú·¥á ·¥Ö·¥á·¥ò·¥õ úÍú± ·¥èÍú∞ ·¥Ñ·¥è…¥·¥†·¥á ÄÍú±·¥Ä·¥õ…™·¥è…¥ ·¥õ·¥è…¢·¥á·¥õ ú·¥á Ä!
Íú∞·¥á·¥á ü Íú∞ Ä·¥á·¥á ·¥õ·¥è ·¥ÄÍú±·¥ã ·¥ç·¥á ·¥Ä…¥ è·¥õ ú…™…¥…¢ ·¥è Ä Íú± ú·¥Ä Ä·¥á 
 è·¥è·¥ú Ä ·¥õ ú·¥è·¥ú…¢ ú·¥õÍú±.
…™'·¥ç  ú·¥á Ä·¥á ·¥õ·¥è  ü…™Íú±·¥õ·¥á…¥ ·¥Ä…¥·¥Ö ·¥á…¥…¢·¥Ä…¢·¥á …™…¥ ·¥ç·¥á·¥Ä…¥…™…¥…¢Íú∞·¥ú ü ·¥Ö…™Íú±·¥Ñ·¥úÍú±Íú±…™·¥è…¥Íú± ·¥°…™·¥õ ú  è·¥è·¥ú 
________________________________________ 
 “ì·¥è Ä ·¥ç·¥è Ä·¥á …™…¥“ì·¥è Ä·¥ç·¥Ä·¥õ…™·¥è…¥ ·¥õ è·¥ò·¥á /help …™…¥ ·¥ç è ·¥ò·¥ç
________________________________________ 
 """
        )
        # Assuming these functions are defined somewhere
        await add_served_user(m.from_user.id)
    else:
        await m.reply_photo(
            photo=random.choice(IMG),
            caption=_[START].format(chutiya),
            reply_markup=InlineKeyboardMarkup(DEV_OP),
        )
        # Assuming these functions are defined somewhere
        await add_served_chat(m.chat.id)


@savvychat.on_message(is_command("help"))
async def help(client: savvychat, m: Message):
    if m.chat.type == ChatType.PRIVATE:
        hmm = await m.reply_photo(
            photo=random.choice(IMG),
            caption=HELP_READ,
            reply_markup=InlineKeyboardMarkup(HELP_BTN),
        )
        await add_served_user(m.from_user.id)
    else:
        await m.reply_photo(
            photo=random.choice(IMG),
            caption="** ú·¥á è, ·¥ò·¥ç ·¥ç·¥á “ì·¥è Ä  ú·¥á ü·¥ò ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ös!**",
            reply_markup=InlineKeyboardMarkup(HELP_BUTN),
        )
        await add_served_chat(m.chat.id)


@savvychat.on_message(filters.new_chat_members)
async def welcome(_, m: Message):
    for member in m.new_chat_members:
        await m.reply_photo(photo=random.choice(IMG), caption=START)
